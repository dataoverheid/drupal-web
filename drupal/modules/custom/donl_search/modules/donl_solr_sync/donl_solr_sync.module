<?php

/**
 * @file
 */

use Drupal\node\Entity\Node;

/**
 * Implements hook_ENTITY_TYPE_insert().
 */
function donl_solr_sync_node_insert(Node $node) {
  switch ($node->getType()) {
    case 'appliance':
      \Drupal::service('donl_solr_sync.application')->sync($node, 'update');
      break;

    case 'catalog':
      \Drupal::service('donl_solr_sync.catalog')->sync($node, 'update');
      break;

    case 'community':
      \Drupal::service('donl_solr_sync.community')->sync($node, 'update');
      break;

    case 'datarequest':
      \Drupal::service('donl_solr_sync.datarequest')->sync($node, 'update');
      break;

    case 'group':
      \Drupal::service('donl_solr_sync.group')->sync($node, 'update');
      break;

    case 'landingpage':
      \Drupal::service('donl_solr_sync.support')->sync($node, 'update');
      break;

    case 'organization':
      \Drupal::service('donl_solr_sync.organization')->sync($node, 'update');
      break;

    case 'recent':
      \Drupal::service('donl_solr_sync.news')->sync($node, 'update');
      break;
  }
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function donl_solr_sync_node_presave(Node $node) {
  if ($node->id()) {
    donl_solr_sync_node_insert($node);
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function donl_solr_sync_node_delete(Node $node) {
  switch ($node->getType()) {
    case 'appliance':
      \Drupal::service('donl_solr_sync.application')->sync($node, 'delete');
      break;

    case 'catalog':
      \Drupal::service('donl_solr_sync.catalog')->sync($node, 'delete');
      break;

    case 'community':
      \Drupal::service('donl_solr_sync.community')->sync($node, 'delete');
      break;

    case 'datarequest':
      \Drupal::service('donl_solr_sync.datarequest')->sync($node, 'delete');
      break;

    case 'group':
      \Drupal::service('donl_solr_sync.group')->sync($node, 'delete');
      break;

    case 'landingpage':
      \Drupal::service('donl_solr_sync.support')->sync($node, 'delete');
      break;

    case 'organization':
      \Drupal::service('donl_solr_sync.organization')->sync($node, 'delete');
      break;

    case 'recent':
      \Drupal::service('donl_solr_sync.news')->sync($node, 'delete');
      break;
  }
}
