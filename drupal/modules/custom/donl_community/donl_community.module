<?php

/**
 * @file
 */

use Drupal\Core\Link;

/**
 * Implements hook_theme().
 */
function donl_community_theme($existing, $type, $theme, $path) {
  return [
    'community_search_block' => [
      'variables' => [
        'form' => [],
        'community' => [],
      ],
    ],
    'community_theme_block' => [
      'variables' => [
        'description' => '',
        'themes' => [],
      ],
    ],
    'community_search' => [
      'variables' => [
        'node' => NULL,
        'search' => '',
        'body' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_page().
 */
function donl_community_preprocess_page(&$variables, $hook) {
  /** @var \Drupal\donl_community\Entity\Community $community */
  if ($community = Drupal::service('donl_community.community_resolver')->resolve()) {
    $variables['page']['shortName'] = $community->getShortName();
    $variables['page']['theme'] = Drupal::service('ckan.mapping')->getThemeClass($community->getThemes()[0] ?? NULL);
  }
}

/**
 * Implements hook_preprocess_field().
 */
function donl_community_preprocess_field(&$variables) {
  $fields = [
    'community_applications',
    'community_datarequests',
    'community_organisations',
    'groups',
  ];
  /** @var \Drupal\donl_community\Entity\Community $community */
  if (isset($variables['element']['#field_name']) && in_array($variables['element']['#field_name'], $fields, TRUE) && ($community = Drupal::service('donl_community.community_resolver')->resolve())) {
    $variables['community_machine_name'] = $community->getMachineName();
  }
}

/**
 * Implements hook_value_list_service_alter().
 */
function donl_community_value_list_service_alter(&$links) {
  $links[] = Link::createFromRoute('DONL Communities', 'donl_community.value_list.communities')->toString();
}
